<%- include('./components/header') %>

    <!-- Spinner Start -->
    <%- include('./components/spinner') %>
        <!-- Spinner End -->

        <!-- Sidebar Start -->
        <%- include('./components/sidebar') %>
            <!-- Sidebar End -->

            <div class="content">
                <%- include('./components/navbar') %>

                    <!-- Recent Sales Start -->
                    <div class="container-fluid pt-4 px-4">
                        <!-- ... Your existing view content ... -->
                        <div class="bg-light text-center rounded p-4">
                            <div class="d-flex align-items-center justify-content-between mb-4">
                                <h6 class="mb-0">Products</h6>
                                <button class="btn btn-small btn-danger" onclick="deleteSelectedProduct()">Delete</button>
                            </div>
                            <div class="table-responsive">
                                <table class="table text-start align-middle table-bordered table-hover mb-0">
                                    <thead>
                                        <tr class="text-dark">
                                            <th scope="col"><input onclick="toggleProductSelectAll()" id="selectAllCheckboxes" class="form-check-input" type="checkbox"></th>
                                            <th scope="col">Title</th>
                                            <th scope="col">Brand</th>
                                            <th scope="col">Quantity</th>
                                            <th scope="col">Price</th>
                                            <th scope="col">Status</th>
                                            <th scope="col">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                    </tbody>
                                </table>

                            </div>
                        </div>

                        <script>
                            function loadProductData() {
                                // Fetch function to get product data from the API
                                fetch('/showproducts')
                                    .then(response => response.json())
                                    .then(data => {
                                        // Handle the data and update the table rows dynamically using JavaScript
                                        const tableBody = document.querySelector('tbody');
                                        if (data.result && data.result.length > 0) {

                                            const products = data.result;
                                            let tableRows = '';
                                            products.forEach(item => {
                                                tableRows += `
                        <tr>
                            <td><input  onchange="handleProductCheckbox(event,'${item._id}')" data-order-id="${item._id}" class="form-check-input checkInput" id="checkInput" type="checkbox"></td>
                            <td>${item.title}</td>
                            <td>${item.brand}</td>
                            <td>${item.quantity}</td>
                            <td>${item.price}</td>
                            <td>
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" role="switch"
                                        id="flexSwitchCheckChecked" onclick="toggleStatus('${item._id}')" ${item.status === 1 ? 'checked' : ''}>
                                    <label class="form-check-label" for="flexSwitchCheckChecked"></label>
                                </div>
                            </td>
                            <td>
                                <a class="btn btn-sm btn-primary" href="/updateProduct?id=${item._id}"><i class="bi bi-pencil-fill"></i></a>
                                <a class="btn btn-sm btn-danger ms-2" onclick="deleteProduct('${item._id}')" ><i class="bi bi-trash-fill"></i></a>
                            </td>
                        </tr>`;
                                            });

                                            tableBody.innerHTML = tableRows;
                                        } else {
                                            tableBody.innerHTML = '<tr><td colspan="7">No records found. If you like you can add post :)</td></tr>';
                                        }
                                    })
                                    .catch(error => console.error('Error fetching data:', error));
                            }
                            // Call the function when the page loads
                            document.addEventListener("DOMContentLoaded", function () {
                                loadProductData();
                            });
                        </script>

                        <script>
                            // Function to handle deleting a user
                            function deleteProduct(id) {
                                Swal.fire({
                                    title: 'Are you sure you want to delete the Product?',
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: '<i class="fa fa-trash"></i> Delete',
                                    cancelButtonText: 'Cancel',
                                    buttonsStyling: false,
                                    customClass: {
                                        confirmButton: 'btn btn-danger mx-2',
                                        cancelButton: 'btn btn-secondary mx-2'
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        fetch('/deleteProduct?id=' + id).then((res) => {
                                            window.location = '/products';
                                        }).catch((err) => {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Error',
                                                text: 'Failed to Delete Product. Please try again.'
                                            });
                                        })

                                        // window.location = '/deleteProduct/' + id;
                                    }
                                });
                            }
                            function toggleStatus(id) {

                                fetch('/toggleStatus?id=' + id).then((res) => {

                                }).catch((err) => {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Failed to change Status. Please try again.'
                                    });
                                })

                            }

                            // handle checkboxes
                            const checkArray = [];
                            function handleProductCheckbox(event, id) {
                                checkbox = event.target;
                                if (checkbox.checked) {
                                    checkArray.push(id);
                                    console.log(checkArray);
                                } else {
                                    // Remove the ID from the array if the checkbox is unchecked
                                    const index = checkArray.indexOf(id);
                                    if (index > -1) {
                                        checkArray.splice(index, 1);
                                        console.log(checkArray);
                                    }
                                }
                            }

                            // Function to handle the "Select All" checkbox
                            function toggleProductSelectAll() {
                                const selectAllCheckbox = document.getElementById('selectAllCheckboxes');
                                const checkboxes = document.querySelectorAll('.checkInput');
                                if (selectAllCheckbox.checked) {
                                    // Select all checkboxes and add their IDs to the checkArray
                                    checkboxes.forEach(checkbox => {
                                        checkbox.checked = true;
                                        if (checkbox.id !== 'selectAllCheckboxes') {
                                            checkArray.push(checkbox.dataset.orderId);
                                        }
                                    });
                                    console.log(checkArray);
                                } else {
                                    // Deselect all checkboxes and clear the checkArray
                                    checkboxes.forEach(checkbox => {
                                        checkbox.checked = false;
                                    });
                                    checkArray.length = 0;
                                    console.log(checkArray);
                                }
                            }

 /////////////////////////////////// delete product alll selected///////////////////////////////////////////////////////////////////
                            function deleteSelectedProduct() {
                            if (checkArray.length > 0) {
                                // Send the array of selected order IDs to the server for deletion
                                Swal.fire({
                                    title: 'Are you sure you want to delete Selected Products?',
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: '<i class="fa fa-trash"></i> Delete',
                                    cancelButtonText: 'Cancel',
                                    buttonsStyling: false,
                                    customClass: {
                                        confirmButton: 'btn btn-danger mx-2',
                                        cancelButton: 'btn btn-secondary mx-2'
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                        fetch('/deleteSelectedProducts', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json'
                                            },
                                            body: JSON.stringify({ productIds: checkArray })
                                        })
                                            .then(response => response.json())
                                            .then(data => {
                                                if (data.success) {
                                                    // Reload the page to reflect the updated order list
                                                    Swal.fire({
                                                        icon: 'success',
                                                        title: 'Success',
                                                        text: 'Data Deleted Successfully!'
                                                    });
                                                } else {
                                                    Swal.fire({
                                                        icon: 'error',
                                                        title: 'Error',
                                                        text: 'Failed to change Status. Please try again.'
                                                    });

                                                }
                                            })
                                            .catch(error => {
                                                console.error('Error:', error);
                                            });

                                        window.location = '/products';
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'No Product Selected!'
                                });
                            }

                        }
                        </script>

                    </div>

                    <%- include('./components/footer') %>