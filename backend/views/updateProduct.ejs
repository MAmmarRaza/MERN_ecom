<%- include('./components/header') %>


    <!-- Spinner Start -->
    <%- include('./components/spinner') %>
        <!-- Spinner End -->


        <!-- Sidebar Start -->
        <%- include('./components/sidebar')%>
            <!-- Sidebar End -->

            <div class="content">
                <%- include('./components/navbar') %>
                    <section class=" gradient-custom ">
                        <div class="container pt-5 pb-2 h-100">
                            <div class="row justify-content-center align-items-center h-100">
                                <div class="col-12  ">
                                    <div class="card shadow-2-strong card-registration bg-light"
                                        style="border-radius: 15px;">
                                        <div class="card-body p-4 p-md-4">
                                            <h3 class="mb-0 pb-2 pb-md-0 mb-md-2">Update Product</h3>
                                            <form method="post" enctype="multipart/form-data" id="updateProduct">
                                                <input type="hidden" name="product_id" id="product_id">
                                                <div class="row">
                                                    <div class="col-md-5 mb-4">
                                                        <div class="form-outline">
                                                            <input type="text" id="title"
                                                                class="form-control form-control-md" name="title" />
                                                            <label class="form-label" for="title">Title</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3 mb-2">
                                                        <div class="form-outline">
                                                            <input class="form-control form-control-md" id="featured"
                                                                type="file" name="featured" />
                                                            <label class="form-label" for="featured">Featured
                                                                Image</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4 mb-4 pb-2">

                                                        <div class="form-outline">
                                                            <input class="form-control form-control-md" type="file"
                                                                id="formFileMultiple images" name="images" multiple>
                                                            <label for="formFileMultiple" class="form-label">Multiple
                                                                files input example</label>
                                                        </div>

                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-5 mb-4 d-flex align-items-center">

                                                        <div class="form-outline datepicker w-100">
                                                            <textarea class="form-control" placeholder=""
                                                                id="description" style="height: 150px;"
                                                                name="description"></textarea>
                                                            <label for="text-area"
                                                                class="form-label">Description</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-7 mb-4">
                                                        <div class="row">
                                                            <div class="col-md-8">
                                                                <select class="form-select form-select-md mb-3" aria-label=".form-select-sm example"  name="brand" id="brand">
                                                                    <option selected>Select Brand</option>
                                                                    <option value="Levi's">Levi's</option>
                                                                    <option value="Gucci">Gucci</option>
                                                                    <option value="Nike">Nike</option>
                                                                    <option value="Adidas">Adidas</option>
                                                                </select>
                                                                <div class="row">
                                                                    <div class="form-outline col-md-6">
                                                                        <input type="number" id="quantity"
                                                                            class="form-control form-control-md"
                                                                            name="quantity" />
                                                                        <label class="form-label"
                                                                            for="quantity">Quantity</label>
                                                                    </div>
                                                                    <div class="form-outline col-md-6">
                                                                        <input type="number" id="price"
                                                                            class="form-control form-control-md"
                                                                            name="price" />
                                                                        <label class="form-label"
                                                                            for="price">Price</label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4">
                                                                <b class="mb-2 pb-1">Size: </b>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox"
                                                                        value="small" id="flexCheckDefault" name="size">
                                                                    <label class="form-check-label"
                                                                        for="flexCheckDefault">
                                                                        Small
                                                                    </label>
                                                                </div>

                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox"
                                                                        value="medium" id="flexCheckDefault"
                                                                        name="size">
                                                                    <label class="form-check-label"
                                                                        for="flexCheckDefault">
                                                                        Medium
                                                                    </label>
                                                                </div>

                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox"
                                                                        value="large" id="flexCheckDefault" name="size">
                                                                    <label class="form-check-label"
                                                                        for="flexCheckDefault">
                                                                        Large
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mt-0 pt-0">
                                                    <input class="btn btn-primary btn-lg" type="submit" value="Submit"
                                                        name="submit" />
                                                </div>

                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    <section class="gradient-custom">
                        <div class="container  h-100">
                            <div class="row justify-content-center align-items-center h-100">
                                <div class="col-12">
                                    <div class="card shadow-2-strong card-registration bg-light"
                                        style="border-radius: 15px;">
                                        <div class="card-body p-4 p-md-4">
                                            <h3>Featured Image</h3>
                                            <img src="" alt="Featured Image" class="w-25"
                                            name="product_featured_Image" id="featured_Image">
                                            <h3 class="mb-0 pb-2 pb-md-0 mb-md-2">Gallery Images: </h3>
                                            <div class="row row-cols-1 row-cols-md-4 g-4" id="gallery_images_container">
                                                <!-- Images will be dynamically added here -->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    <!-- ... Your existing HTML code ... -->

                    <!-- ... Your existing HTML code ... -->

                    <script>
                        document.addEventListener('DOMContentLoaded', async () => {
                            // Extract the product ID from the URL
                            const urlParams = new URLSearchParams(window.location.search);
                            const productId = urlParams.get('id');

                            // Fetch the product record based on the extracted ID
                            await fetch(`/showUpdateProduct?id=${productId}`)
                                .then((response) => response.json())
                                .then((data) => {
                                    // Populate the form fields with the retrieved data
                                    document.querySelector('#title').value = data.title;
                                    document.querySelector('#featured_Image').src = `/images/${data.featured}`;
                                    document.querySelector('#description').value = data.description;
                                    document.querySelector('#brand').value = data.brand;
                                    document.querySelector('#quantity').value = data.quantity;
                                    document.querySelector('#price').value = data.price;
                                    document.querySelector('#product_id').value = data._id;


                                    // Assuming 'size' is an array of checkbox values received from the server
                                    data.size.forEach((size) => {
                                        document.querySelector(`input[value="${size}"]`).checked = true;
                                    });

                                    // Populate the gallery images
                                    const galleryImagesContainer = document.getElementById('gallery_images_container');
                                    galleryImagesContainer.innerHTML = ''; // Clear previous images
                                    data.images.forEach((imageName) => {
                                        const imageContainer = document.createElement('div');
                                        imageContainer.classList.add('gallery-image-container');

                                        const imageElement = document.createElement('img');
                                        imageElement.src = `/images/${imageName}`;
                                        imageElement.alt = 'Gallery Image';
                                        imageElement.classList.add('img-fluid', 'mb-2', 'gallery-image'); // Add "gallery-image" class

                                        const crossIcon = document.createElement('i');
                                        crossIcon.classList.add('fas', 'fa-times', 'delete-icon');
                                        crossIcon.addEventListener('click', () => {
                                            removeImage(imageName); // Call the removeImage function when the cross icon is clicked
                                        });

                                        imageContainer.appendChild(imageElement);
                                        imageContainer.appendChild(crossIcon);

                                        galleryImagesContainer.appendChild(imageContainer);
                                    });
                                })
                                .catch((error) => console.error('Error fetching product:', error));

                            // remove image on cross icon click
                            function removeImage(imageName) {
                                // Assuming you have already obtained the `productId` and `imageName` variables

                                const requestBody = {
                                    id: productId,
                                    img: imageName,
                                };

                                // Update the DOM to hide the image without reloading the page
                                const galleryImagesContainer = document.getElementById('gallery_images_container');
                                const imageToDelete = galleryImagesContainer.querySelector(`img[src="/images/${imageName}"]`);
                                if (imageToDelete) {
                                    imageToDelete.style.display = 'none';
                                    // Find the parent element of the image (which contains the icon)
                                    const imageContainer = imageToDelete.parentNode;

                                    // Find the icon element (assuming it has a specific class, e.g., 'cross-icon')
                                    const crossIcon = imageContainer.querySelector('.delete-icon');

                                    // Hide the icon as well
                                    if (crossIcon) {
                                        crossIcon.style.display = 'none';
                                    }

                                }


                                fetch('/removeImage', {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(requestBody),
                                })
                                    .then((response) => {
                                        if (!response.ok) {
                                            throw new Error('Failed to delete image');
                                        }
                                        return response.json();
                                    })
                                    .then((data) => {
                                        console.log(data.message); // Display the success message from the server
                                    })
                                    .catch((error) => {
                                        console.error(error.message);
                                    });
                                console.log(`Image ${imageName} will be removed.`);
                            }
                        });

                        document.getElementById("updateProduct").addEventListener("submit", function (event) {
                                event.preventDefault();

                                // Get the form data and create a FormData object to handle file uploads
                                const formData = new FormData(this);

                                // Send the form data to the updateProduct function
                                updateProduct(formData);
                            });

                            function updateProduct(formData) {
                                const productId = formData.get("product_id");

                                fetch(`/saveUpdateProduct?id=${productId}`, {
                                    method: "POST",
                                    body: formData,
                                })
                                    .then((response) => {
                                        if (!response.ok) {
                                            throw new Error("Request failed");
                                        }
                                        return response.json();
                                    })
                                    .then((data) => {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Success',
                                            text: 'Product updated successfully!'
                                        }).then(() => {
                                            window.location.href = '/products';
                                        });
                                    })
                                    .catch((error) => {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'errpr',
                                            text: 'Product not updated!'
                                        })
                                    });
                            }
                    </script>



                    <%- include('./components/footer')%>