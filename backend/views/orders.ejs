<%- include('./components/header') %>

    <!-- Spinner Start -->
    <%- include('./components/spinner') %>
        <!-- Spinner End -->

        <!-- Sidebar Start -->
        <%- include('./components/sidebar') %>
            <!-- Sidebar End -->

            <div class="content">
                <%- include('./components/navbar') %>

                    <!-- Recent Sales Start -->
                    <div class="container-fluid pt-4 px-4">
                        <div class="bg-light text-center rounded p-4">
                            <div class="d-flex align-items-center justify-content-between mb-4">
                                <h6 class="mb-0">Orders</h6>
                                <button class="btn btn-small btn-danger" onclick="deleteSelectedOrder()">Delete</button>
                            </div>
                            <div class="table-responsive">

                                <table class="table text-start align-middle table-bordered table-hover mb-0">
                                    <thead>
                                        <tr class="text-dark">
                                            <th scope="col"><input onclick="toggleSelectAll()" class="form-check-input"
                                                    id="selectAllCheckboxes" type="checkbox"></th>
                                            <th scope="col">Data</th>
                                            <th scope="col">Customer Mail</th>
                                            <th scope="col">Total Price</th>
                                            <th scope="col">Status</th>
                                            <th scope="col">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>



                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <!-- Modal -->
                    <div class="modal fade" id="showOrderDetail" tabindex="-1" aria-labelledby="editModalLabel"
                        aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header border-bottom-0">
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body text-start text-black p-4 mb-3">
                                    <h5 class="modal-title text-uppercase mb-2 " id="exampleModalLabel">Order Detail
                                    </h5>
                                    <p class="mb-0" style="color: #35558a;">Payment summary</p>
                                    <hr class="mt-2 mb-4"
                                        style="height: 0; background-color: transparent; opacity: .75; border-top: 2px dashed #9e9e9e;">
                                    <div id="products">
                                        <!-- products will come here -->
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <p class="fw-bold">Total</p>
                                        <p class="fw-bold total" style="color: #35558a;">$total</p>
                                    </div>
                                    <hr class="mt-2 mb-4"
                                        style="height: 0; background-color: transparent; opacity: .75; border-top: 2px dashed #9e9e9e;">
                                    <div class="d-flex justify-content-between">
                                        <p class="mb-0">Address</p>
                                        <p class="text-muted mb-0 address">Lahore</p>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <p class="mb-0">Country</p>
                                        <p class="text-muted mb-0 " id="country">Lahore</p>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <p class="mb-0">State</p>
                                        <p class="text-muted mb-0 state">Lahore</p>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <p class="mb-0">Zip</p>
                                        <p class="text-muted mb-0 zip">Lahore</p>
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>

                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            const customer = "";
                            // Fetch function to get product data from the API
                            fetch('/showorders')
                                .then(response => response.json())
                                .then(data => {
                                    // Handle the data and update the table rows dynamically using JavaScript
                                    const tableBody = document.querySelector('tbody');
                                    if (data.result && data.result.length > 0) {

                                        const products = data.result;
                                        let tableRows = '';
                                        products.forEach(item => {
                                            tableRows += `
                                        <tr>
                                            <td><input  onchange="handleCheckbox(event,'${item._id}')" data-order-id="${item._id}" class="form-check-input checkInput" id="checkInput" type="checkbox"></td>
                                            <td >${item.date}</td>
                                            <td>${item.email}</td>
                                            <td>${item.amount}</td>
                                            <td>
                                                <div class="form-check form-switch">
                                                    <input  class="form-check-input" type="checkbox" role="switch"
                                                        id="flexSwitchCheckChecked" onclick="toggleOrderStatus('${item._id}')" ${item.status === 1 ? 'checked' : ''}>
                                                    <label class="form-check-label" for="flexSwitchCheckChecked"></label>
                                                </div>
                                            </td>
                                            <td >
                                                <!-- View button -->
                                                <a class="btn btn-sm btn-success " data-bs-toggle="modal"
                                                data-bs-target="#showOrderDetail" onclick="showOrderDetail('${item._id}')" ><i class="bi bi-eye-fill"></i></a>
                                                <!-- Delete button -->
                                                <a class="btn btn-sm btn-danger ms-2" onclick="deleteOrder('${item._id}')"><i
                                                        class="bi bi-trash-fill"></i></a>
                                            </td>
                                        </tr>`;
                                        });

                                        tableBody.innerHTML = tableRows;
                                    } else {
                                        tableBody.innerHTML = '<tr><td colspan="7">No records found. If you like you can add post :)</td></tr>';
                                    }
                                })
                                .catch(error => console.error('Error fetching data:', error));
                        }
                            // Call the function when the page loads


                        );

                    </script>

                    <script>
                        function showOrderDetail(id) {

                            fetch(`/showOrderDetail?order_id=${id}`)
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Request failed');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    let productrows = '';
                                    let total = 0;
                                    console.log(data.country);
                                    if (data) {
                                        data.orderDetail.map((item) => {
                                            total += item.price;
                                            productrows += `
                                        <div class="d-flex justify-content-between">
                                            <p class="fw-bold mb-0">${item.title} ( ${item.selectedSize} / Qty:${item.quantity})</p>
                                            <p class="text-muted mb-0">$${item.price}</p>
                                        </div>
                                        `
                                        })
                                        document.querySelector(".address").textContent = data.address;
                                        document.getElementById("country").textContent = data.country;
                                        document.querySelector(".zip").textContent = data.zip;
                                        document.querySelector(".state").textContent = data.state;
                                        document.getElementById("products").innerHTML = productrows;
                                        document.querySelector(".total").textContent = total;
                                    } else {
                                        // Handle the case when staff member data is not available
                                        console.error('Staff member data not available');
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                });
                        }

                        function openShowModal() {
                            const showDetail = new bootstrap.Modal(document.getElementById('showOrderDetail'));
                            showDetail.show();
                        }

                        function deleteOrder(id) {
                            Swal.fire({
                                title: 'Are you sure you want to delete the Order and Detail?',
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: '<i class="fa fa-trash"></i> Delete',
                                cancelButtonText: 'Cancel',
                                buttonsStyling: false,
                                customClass: {
                                    confirmButton: 'btn btn-danger mx-2',
                                    cancelButton: 'btn btn-secondary mx-2'
                                }
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    fetch('/deleteOrder?id=' + id).then((res) => {
                                        window.location = '/orders';
                                    }).catch((err) => {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: 'Failed to Delete Product. Please try again.'
                                        });
                                    })

                                    // window.location = '/deleteProduct/' + id;
                                }
                            });
                        }

                        function toggleOrderStatus(id) {
                            fetch('/toggleOrderStatus?id=' + id).then((res) => {

                            }).catch((err) => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Failed to change Status. Please try again.'
                                });
                            })

                        }

                        // handle checkbox
                        const checkArray = [];
                        function handleCheckbox(event, id) {
                            checkbox = event.target;
                            if (checkbox.checked) {
                                checkArray.push(id);
                                console.log(checkArray);
                            } else {
                                // Remove the ID from the array if the checkbox is unchecked
                                const index = checkArray.indexOf(id);
                                if (index > -1) {
                                    checkArray.splice(index, 1);
                                    console.log(checkArray);
                                }
                            }
                        }
                        function deleteSelectedOrders() {
                            console.log(checkArray);
                        }

                        function deleteSelectedOrder() {
                            if (checkArray.length > 0) {
                                // Send the array of selected order IDs to the server for deletion
                                Swal.fire({
                                    title: 'Are you sure you want to delete Selected Orders and Detail?',
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: '<i class="fa fa-trash"></i> Delete',
                                    cancelButtonText: 'Cancel',
                                    buttonsStyling: false,
                                    customClass: {
                                        confirmButton: 'btn btn-danger mx-2',
                                        cancelButton: 'btn btn-secondary mx-2'
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                        fetch('/deleteSelectedOrders', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json'
                                            },
                                            body: JSON.stringify({ orderIds: checkArray })
                                        })
                                            .then(response => response.json())
                                            .then(data => {
                                                if (data.success) {
                                                    // Reload the page to reflect the updated order list
                                                    Swal.fire({
                                                        icon: 'success',
                                                        title: 'Success',
                                                        text: 'Failed to change Status. Please try again.'
                                                    });
                                                } else {
                                                    Swal.fire({
                                                        icon: 'error',
                                                        title: 'Error',
                                                        text: 'Failed to change Status. Please try again.'
                                                    });

                                                }
                                            })
                                            .catch(error => {
                                                console.error('Error:', error);
                                            });

                                        window.location = '/orders';
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'No Order Selected!'
                                });
                            }

                        }


                        // Function to handle the "Select All" checkbox
                        function toggleSelectAll() {
                            const selectAllCheckbox = document.getElementById('selectAllCheckboxes');
                            const checkboxes = document.querySelectorAll('.checkInput');
                            if (selectAllCheckbox.checked) {
                                // Select all checkboxes and add their IDs to the checkArray
                                checkboxes.forEach(checkbox => {
                                    checkbox.checked = true;
                                    if (checkbox.id !== 'selectAllCheckboxes') {
                                        checkArray.push(checkbox.dataset.orderId);
                                    }
                                });
                                console.log(checkArray);
                            } else {
                                // Deselect all checkboxes and clear the checkArray
                                checkboxes.forEach(checkbox => {
                                    checkbox.checked = false;
                                });
                                checkArray.length = 0;
                                console.log(checkArray);
                            }
                        }
                    </script>

                    <%- include('./components/footer') %>